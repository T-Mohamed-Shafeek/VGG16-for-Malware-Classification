import streamlit as st
from tensorflow.keras.models import load_model
import numpy as np
from PIL import Image

model = load_model("c:\Users\shafe\Downloads\hp_tuned_vgg16_on_malimg.hdf5")

class_names = [
    "Adialer.C",
    "Agent.FYI",
    "Allaple.A",
    "Allaple.L",
    "Alueron.gen!J",
    "Autorun.K",
    "C2LOP.P",
    "C2LOP.gen!g",
    "Dialplatform.B",
    "Dontovo.A",
    "Fakerean",
    "Instantaccess",
    "Lolyda.AA1",
    "Lolyda.AA2",
    "Lolyda.AA3",
    "Lolyda.AT",
    "Malex.gen!J",
    "Obfuscator.AD",
    "Rbot!gen",
    "Skintrim.N",
    "Swizzor.gen!E",
    "Swizzor.gen!I",
    "VB.AT",
    "Wintrim.BX",
    "Yuner.A"
]

st.title("Malware Family Classification")
uploaded_file = st.file_uploader("Choose a malware image...", type="png")

if uploaded_file is not None:
    # Display uploaded image
    image = Image.open(uploaded_file)
    st.image(image, caption="Uploaded malware image.", use_column_width=True)

    # Make prediction
    st.write("")
    st.write("Classifying...")
    img_array = np.array(image)
    img_array = img_array / 255.0  # Normalize
    img_array = img_array.reshape((1, img_array.shape[0], img_array.shape[1], img_array.shape[2]))  # Reshape
    prediction = model.predict(img_array)
    predicted_class = np.argmax(prediction)
    st.write(f"Predicted malware family: {class_names[predicted_class]}")
